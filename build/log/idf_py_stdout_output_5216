[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\sdspi_1\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/sdspi_1/build/bootloader/bootloader.bin"
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sd_card_example_main.c.obj
In file included from C:/Espressif/frameworks/esp-idf-v5.1.3/components/driver/deprecated/driver/i2s.h:23,
                 from C:/Espressif/frameworks/sdspi_1/main/sd_card_example_main.c:21:
C:/Espressif/frameworks/esp-idf-v5.1.3/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
C:/Espressif/frameworks/esp-idf-v5.1.3/components/driver/deprecated/driver/i2s.h:27:2: warning: #warning "This set of I2S APIs has been deprecated, please include 'driver/i2s_std.h', 'driver/i2s_pdm.h' or 'driver/i2s_tdm.h' instead. if you want to keep using the old APIs and ignore this warning, you can enable 'Suppress leagcy driver deprecated warning' option under 'I2S Configuration' menu in Kconfig" [-Wcpp]
   27 | #warning "This set of I2S APIs has been deprecated, \
      |  ^~~~~~~
C:/Espressif/frameworks/sdspi_1/main/sd_card_example_main.c: In function 'read_filePPG_from_sdCard':
C:/Espressif/frameworks/sdspi_1/main/sd_card_example_main.c:77:37: warning: passing argument 1 of 'sdcard_readDataFromFile' from incompatible pointer type [-Wincompatible-pointer-types]
   77 |             sdcard_readDataFromFile(&number_peaks_ppg, ppg_file, "%d\n", &ppg_sample );
      |                                     ^~~~~~~~~~~~~~~~~
      |                                     |
      |                                     int *
In file included from C:/Espressif/frameworks/sdspi_1/main/sd_card_example_main.c:25:
c:\espressif\frameworks\sdspi_1\component\filemanager\sdcard1.h:104:46: note: expected 'long int *' but argument is of type 'int *'
  104 | esp_err_t sdcard_readDataFromFile( long int *index_data, const char *nameFile, const char *format, ...);
      |                                    ~~~~~~~~~~^~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable sd_card.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/sdspi_1/build/sd_card.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\sdspi_1\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/sdspi_1/build/partition_table/partition-table.bin C:/Espressif/frameworks/sdspi_1/build/sd_card.bin"
sd_card.bin binary size 0x48c30 bytes. Smallest app partition is 0x100000 bytes. 0xb73d0 bytes (72%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.3\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.1.3 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.1.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/sdspi_1/build -P C:/Espressif/frameworks/esp-idf-v5.1.3/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 sd_card.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM4
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: d8:bc:38:fc:3b:78
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00058fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26704 bytes to 16729...
Writing at 0x00001000... (50 %)
Writing at 0x000076a0... (100 %)
Wrote 26704 bytes (16729 compressed) at 0x00001000 in 0.7 seconds (effective 327.3 kbit/s)...
Hash of data verified.
Compressed 298032 bytes to 167421...
Writing at 0x00010000... (9 %)
Writing at 0x0001c79c... (18 %)
Writing at 0x00024377... (27 %)
Writing at 0x000298cc... (36 %)
Writing at 0x0002f873... (45 %)
Writing at 0x00034dc8... (54 %)
Writing at 0x0003d7f4... (63 %)
Writing at 0x0004485a... (72 %)
Writing at 0x0004bd45... (81 %)
Writing at 0x000517cf... (90 %)
Writing at 0x000575e9... (100 %)
Wrote 298032 bytes (167421 compressed) at 0x00010000 in 4.1 seconds (effective 588.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 530.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
